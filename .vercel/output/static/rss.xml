<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:version="2.0"><channel><title>YOO_koishi</title><description>YOO_koishi&apos;s blog</description><link>https://frosti.saroprock.com/</link><language>zh</language><item><title>第一次会议</title><link>https://frosti.saroprock.com/blog/%E5%9C%A8%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E4%B9%8B%E5%89%8D/</link><guid isPermaLink="true">https://frosti.saroprock.com/blog/%E5%9C%A8%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E4%B9%8B%E5%89%8D/</guid><description>个人初步的想法与团队开发前需要确定的一些问题</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://frosti.saroprock.com/blog/%E5%9C%A8%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E4%B9%8B%E5%89%8D/&quot;&gt;https://frosti.saroprock.com/blog/%E5%9C%A8%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E4%B9%8B%E5%89%8D/&lt;/a&gt;&lt;/blockquote&gt; &lt;h2&gt;初步想法&lt;/h2&gt;
&lt;p&gt;用户段可做一个微信小程序，小程序首次进入时需要收集社区，门牌号，电话号码等信息，此后不再收集，首页放一些大小适合老年人的按钮，上面写一些问题出现频率最高的问题，比如水管漏水之类的，点击按钮进入二级菜单，可以支持录音，文字输入，小程序。&lt;/p&gt;
</content:encoded><dc:creator>YOO_koishi&apos;s blog</dc:creator><pubDate>Sat, 24 May 2025 16:00:00 GMT</pubDate></item><item><title>最近干的事的记录</title><link>https://frosti.saroprock.com/blog/%E6%9C%80%E8%BF%91todo/</link><guid isPermaLink="true">https://frosti.saroprock.com/blog/%E6%9C%80%E8%BF%91todo/</guid><description>what i&apos;m doing</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://frosti.saroprock.com/blog/%E6%9C%80%E8%BF%91todo/&quot;&gt;https://frosti.saroprock.com/blog/%E6%9C%80%E8%BF%91todo/&lt;/a&gt;&lt;/blockquote&gt; &lt;h2&gt;持续更新中&lt;/h2&gt;
&lt;p&gt;以下是一些最近(未来一学期以内)做完的,和一些想做的.&lt;/p&gt;
&lt;h3&gt;done&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;看完了mygo&lt;/li&gt;
&lt;li&gt;看完了gbc&lt;/li&gt;
&lt;li&gt;打了很多舞萌&lt;/li&gt;
&lt;li&gt;看完 mit-计算机教育缺失的一个学期&lt;/li&gt;
&lt;li&gt;迁移我的博客到一个好看的主题&lt;/li&gt;
&lt;li&gt;蓝桥杯&lt;/li&gt;
&lt;li&gt;看轻音少女&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;doing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ospp前置任务，目前锁定astrbot项目，以提交一个pr,被merge了&lt;/li&gt;
&lt;li&gt;减肥进行中（想要减20-30斤）&lt;/li&gt;
&lt;li&gt;把cpp程序设计实践的作业做完&lt;/li&gt;
&lt;li&gt;英语四级&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;want do&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;unity游戏制作(在学了吗)&lt;/li&gt;
&lt;li&gt;练习键盘（没钱买键盘，可能会等ospp的奖金下来后买）&lt;/li&gt;
&lt;li&gt;2025年看完京阿尼的所有动漫&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><dc:creator>YOO_koishi&apos;s blog</dc:creator><pubDate>Mon, 05 May 2025 16:00:00 GMT</pubDate></item><item><title>西安游记</title><link>https://frosti.saroprock.com/blog/%E6%B8%B8%E8%AE%B0-%E8%A5%BF%E5%AE%89/</link><guid isPermaLink="true">https://frosti.saroprock.com/blog/%E6%B8%B8%E8%AE%B0-%E8%A5%BF%E5%AE%89/</guid><description>Xi&apos;an Travel Notes</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://frosti.saroprock.com/blog/%E6%B8%B8%E8%AE%B0-%E8%A5%BF%E5%AE%89/&quot;&gt;https://frosti.saroprock.com/blog/%E6%B8%B8%E8%AE%B0-%E8%A5%BF%E5%AE%89/&lt;/a&gt;&lt;/blockquote&gt; &lt;p&gt;这篇blog记录了这个五一假期在西安游玩的一些地方，和感想。&lt;/p&gt;
&lt;h2&gt;4月30日&lt;/h2&gt;
&lt;p&gt;由于五一假期出行人数众多，西安又是一个热门的旅行城市，我只抢到了硬座票，还是买的北京到乌鲁木齐的火车硬座票，来买长乘短。说实话，以往的出行我只坐过飞机高铁，很少坐火车，小时候坐过硬卧，这回还是第一次坐硬座。&lt;/p&gt;
&lt;p&gt;早就听闻硬座非常的折磨人，但是我觉得，作为一个年轻的大学生，坐几个小时硬座还是没什么问题的。下午四点，我乘坐地铁前往了北京西站（翘了离散数学），六点半，开始检票，我做的车厢离电梯很近，而且排队的人也没有多少，这时我窃喜，感觉车厢没多少人。进了车厢，我坐在我的座位上，由于是起始站，我周围的六个位置只坐了两个人（包括我），我暗自窃喜，觉得今晚一定能睡一个好觉，小小硬座轻松拿捏！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;小趣事&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;小r同学来北京玩的时候，火车上有很多大爷大妈，硬座体验拉满了。在和她聊天的时候，我曾有过这样一个幻想（x）
&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_000.jpg&quot; alt=&quot;lt&quot;&gt;
没想到，当火车开到保定站时，我的旁边真的上来了一个没抢上卧铺着急回家的可爱150cm身高散发着洗发水香气的女大学生（？），她人蛮好的，我刷着视频流鼻血了，还给我送纸巾，感恩🙏。可以说是这个五一假期好运的开始。&lt;/p&gt;
&lt;p&gt;PS:可惜没聊上天，哈哈，i人。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;晚上，剩余的座位已经没没买上座位的无座票人员沾满，而硬座的绝望体验才刚刚开始（。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;5月1日&lt;/h2&gt;
&lt;p&gt;凌晨12点，我打开b站，开始看幸运星，周围的人开始勉强自己睡着，但是由于我日常比较晚睡觉，加上我昨天中午补过觉了，所以我目前暂无困意。&lt;/p&gt;
&lt;p&gt;看了三集，网越来越卡，我也就不看了，我先做个预测，这四位主角人气排名： 泉 &amp;gt; 小镜 &amp;gt; 小司 &amp;gt;= 美幸。感觉泉的性格和我有点像。都是临时抱佛脚类型呢。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/qcf&quot; alt=&quot;泉此方&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后开始刷手机，刷手机，刷手机……&lt;/p&gt;
&lt;p&gt;就这样困困的到了白天，早上六点多，火车到了西安站，我的硬座之旅也终于结束。&lt;/p&gt;
&lt;p&gt;早上七点多，我坐地铁到了大雁塔站，我想着，乘着现在还精神，去大雁塔看看吧。之后就提着一堆东西去了大雁塔下面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_002.jpg&quot; alt=&quot;大雁塔&quot;&gt;&lt;/p&gt;
&lt;p&gt;差不多8点，小r来接我，他送我去旅店放行李，然后我们又去了小寨等商场逛了一下，没想到西安也有类似上海百联ZX那样的商场，而且还大一些，里面全是谷子店，遗憾的是，并没有日本的谷子店入驻。&lt;/p&gt;
&lt;p&gt;中午，我有点困了，我们就去旅馆休息了。天气很热，房间里刚好有空调，但是小r太笨了，不会开空调，而我已经躺在床上睡着了，在六点左右我被热醒了。&lt;/p&gt;
&lt;p&gt;晚上，我们去大唐不夜城转了转，最后在海底捞，他给我过了生日。感谢小r送的baka。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_020.jpg&quot; alt=&quot;zl&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;5月2日&lt;/h2&gt;
&lt;p&gt;起床了，已经是两点。吃了一碗老陕油泼面，下午，我们去逛了钟楼鼓楼，回民街,还去了广仁寺。最后买了一些伴手礼。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_048.jpg&quot; alt=&quot;zl&quot;&gt;
&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_047.jpg&quot; alt=&quot;gl&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;5月3日&lt;/h2&gt;
&lt;p&gt;再次起床，也是两点，我去小r家摸了猫猫🐱，这也是我第一回摸猫，帮她写了程序设计作业以后，我们出发，准备前往华山，也是这次西安之旅的重点。这次选择的是北上西下的路线，徒步上山，坐索道下山。坐地铁去高铁站以后，再做一个小时高铁就到了华山站。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_006.jpg&quot; alt=&quot;hs&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在时间还早，大概是下午6点，天还没黑，一出华山站，就有推销手套登山杖的老奶奶。我们买了两块钱一双的手套，结果5m外的店写着手套一元一双。。。还是被老奶奶摆了一道。&lt;/p&gt;
&lt;p&gt;我本来给小r提醒穿厚一些，结果自己忘带冲锋衣内胆了，最后花了50租了一个大衣，又花了50租了一个帐篷。这就导致我们上山时要多带两个累赘。&lt;/p&gt;
&lt;p&gt;原本打算10点开始爬，到5点左右到东峰看日出，不过因为来的有些早，我们的计划提前了一些，不过还好提前了一些。&lt;/p&gt;
&lt;p&gt;八点半左右坐出租车到山脚下，就开始了我们的爬山之旅。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_068.jpg&quot; alt=&quot;huashan&quot;&gt;&lt;/p&gt;
&lt;p&gt;一开始的时候我穿着冲锋衣，还没爬到一公里，顿感不妙，里面的短袖已经湿透了。大大减慢了前进的速度。这个故事告诉我们，夏天去爬华山，就算是晚上也要记得先穿薄一点，然后等早上冷的时候在穿厚一点。&lt;/p&gt;
&lt;p&gt;路上，一瓶矿泉水的价格从一块一瓶，到两块一瓶，五块两瓶，最后到10块一瓶。&lt;/p&gt;
&lt;h2&gt;5月4日&lt;/h2&gt;
&lt;p&gt;大概爬了6个小时，我们到北峰了，但是一般这个时候大家都到东峰了，主播腿比较菜，爬的太慢了，此时已经2点左右，日出大约在5点50左右开始，去东峰的时间已然不多了，而我们二人（其实只有我）已经很劳累了，爬上东峰变得有些困难（还是开始的晚了）。&lt;/p&gt;
&lt;p&gt;华山的有些地方非常的陡峭，需要双手双脚并用爬上去。
&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_019.jpg&quot; alt=&quot;do&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_026.jpg&quot; alt=&quot;do&quot;&gt;
&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_063.jpg&quot; alt=&quot;do&quot;&gt;
之后爬了3个小时，在东峰前的一个小台阶看日出了。&lt;/p&gt;
&lt;p&gt;下面是一些筑波拍摄的照片。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_028.jpg&quot; alt=&quot;天亮前的夜晚&quot;&gt;&lt;/p&gt;
&lt;p&gt;蓝调&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_024.jpg&quot; alt=&quot;蓝调&quot;&gt;&lt;/p&gt;
&lt;p&gt;朝霞&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_007.jpg&quot; alt=&quot;朝霞&quot;&gt;&lt;/p&gt;
&lt;p&gt;出升&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_034.jpg&quot; alt=&quot;cs&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_003.jpg&quot; alt=&quot;cs&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_039.jpg&quot; alt=&quot;cs&quot;&gt;&lt;/p&gt;
&lt;p&gt;升毕
&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_055.jpg&quot; alt=&quot;shenb&quot;&gt;&lt;/p&gt;
&lt;p&gt;日出以后，我们本来准备找一个平台，扎下帐篷，稍作休息再去爬南峰，西峰的，不过找到的地方不让我们扎营。而刚好，我们找到了坐西峰索道的大部队，我们就顺势坐缆车下山了，这次排队只花了半小时左右，如果等到中午，那么将会至少排队2小时。&lt;/p&gt;
&lt;p&gt;西峰的缆车可谓是华山的招牌，垂直的跨度非常的大，有很多人爬山的时候没害怕，坐缆车害怕了。期间会经过两段下山的路，一段上山的路。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_004.jpg&quot; alt=&quot;lanche&quot;&gt;&lt;/p&gt;
&lt;p&gt;顺利下山以后，我们坐着无座的高铁回西安了。就此和小r物理上的告别。&lt;/p&gt;
&lt;p&gt;睡了一下午，又睡了一晚上&lt;/p&gt;
&lt;h2&gt;5月5日&lt;/h2&gt;
&lt;p&gt;这天下午，我带上行李换了一个宾馆，五号的宾馆终于恢复了正常的价格，在市中心，环境很好的双人间才100出头。放好行李以后，我乘地铁去到兵马俑博物馆。&lt;/p&gt;
&lt;p&gt;看兵马俑分两个区域，一个是秦始皇兵马俑博物馆，另一个是丽园，后者是秦始皇陵的所在处，5月5日，人流量是淡季中的淡季，畅通无阻的去到了兵马俑博物馆,里面没有我想象中的大。里面有三个坑，一号最大，其次二号,三号最小。不过三号里装的都是高级官员。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_031.jpg&quot; alt=&quot;yihaho&quot;&gt;
&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_065.jpg&quot; alt=&quot;yihaho&quot;&gt;
&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_056.jpg&quot; alt=&quot;yihaho&quot;&gt;
&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_066.jpg&quot; alt=&quot;yihaho&quot;&gt;
&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_023.jpg&quot; alt=&quot;yihaho&quot;&gt;
&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_017.jpg&quot; alt=&quot;yihaho&quot;&gt;
&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_018.jpg&quot; alt=&quot;yihaho&quot;&gt;
&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_036.jpg&quot; alt=&quot;yihaho&quot;&gt;
&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_017.jpg&quot; alt=&quot;yihaho&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后是丽园，里面值得一看的也就秦始皇的两辆铜马车了，秦代就有做工这么好的铜器，还是很让人震惊的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://frosti.saroprock.com/image/xian_image/image_046.jpg&quot; alt=&quot;che&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后仅花3小时就转完了所有的场馆，虽说有些走马观花，但是还好不是人挤人。&lt;/p&gt;
&lt;h2&gt;5月6日&lt;/h2&gt;
&lt;p&gt;早上坐飞机回北京了，买的西安到哈尔滨的机票，甩尾后半段。便宜了400多块钱。&lt;/p&gt;
&lt;p&gt;推荐小程序，机票神操作。&lt;/p&gt;
&lt;p&gt;告别的太隆重，或许都代表了不太好的事情。&lt;/p&gt;
</content:encoded><dc:creator>YOO_koishi&apos;s blog</dc:creator><pubDate>Mon, 05 May 2025 16:00:00 GMT</pubDate></item><item><title>寒假_计算机教育缺失的一个学期</title><link>https://frosti.saroprock.com/blog/%E5%AF%92%E5%81%87-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%BA%E5%A4%B1%E7%9A%84%E4%B8%80%E4%B8%AA%E5%AD%A6%E6%9C%9F/</link><guid isPermaLink="true">https://frosti.saroprock.com/blog/%E5%AF%92%E5%81%87-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%BA%E5%A4%B1%E7%9A%84%E4%B8%80%E4%B8%AA%E5%AD%A6%E6%9C%9F/</guid><description>Class learning note</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://frosti.saroprock.com/blog/%E5%AF%92%E5%81%87-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%BA%E5%A4%B1%E7%9A%84%E4%B8%80%E4%B8%AA%E5%AD%A6%E6%9C%9F/&quot;&gt;https://frosti.saroprock.com/blog/%E5%AF%92%E5%81%87-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%BA%E5%A4%B1%E7%9A%84%E4%B8%80%E4%B8%AA%E5%AD%A6%E6%9C%9F/&lt;/a&gt;&lt;/blockquote&gt; &lt;h2&gt;MIT-Missing-Semester&lt;/h2&gt;
&lt;p&gt;这门课程包含许多大学的课堂上不会涉及但却对每个 CSer 无比重要的工具或者知识点。例如 Shell 编程、命令行配置、Git、Vim、tmux、ssh 等等。其中的一些内容对于我们来说可能略有耳闻，或者只知道如何使用而不知道其原理，那么这堂课无疑是了解这些工具的good way。通过这门课程的学习，我了解到了linux的一些高端操作，以及为什么用linux的电脑才是真正的掌握自己的电脑。&lt;/p&gt;
&lt;h3&gt;Part 1 shell入门&lt;/h3&gt;
&lt;p&gt;一些简要的文件系统操作这里不再记录。&lt;/p&gt;
&lt;p&gt;重定向输入输出 ,&lt;code&gt;&amp;lt;&lt;/code&gt;,&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;missing:~$ echo hello &amp;gt; hello.txt
missing:~$ cat hello.txt
hello
missing:~$ cat &amp;lt; hello.txt
hello
missing:~$ cat &amp;lt; hello.txt &amp;gt; hello2.txt
missing:~$ cat hello2.txt
hello
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重定向输出，(行末追加)&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;
管道符&lt;code&gt;|&lt;/code&gt; 允许我们将一个程序的输出和另外一个程序的输入连接起来：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;missing:~$ ls -l / | tail -n1
drwxr-xr-x 1 root  root  4096 Jun 20  2019 var
missing:~$ curl --head --silent google.com | grep --ignore-case content-length | cut --delimiter=&amp;#39; &amp;#39; -f2
219
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上图第二条为对google.com的信息进行数据整理操作，在part4会有更多操作实例。&lt;/p&gt;
&lt;p&gt;顺带一提，利用管道符和&lt;code&gt;xclip&lt;/code&gt;软件可以非常方便的将命令行中你想要的输出进行拷贝，具体用法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ls | xclip -sel c
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;一个很基础实用的软件&lt;code&gt;tee&lt;/code&gt;，作用是一个三通管道，通过输入流进入后重定向输出到一个文件中，同时在命令行输出输入流。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;下面是一个有趣的操作例子&lt;/h4&gt;
&lt;p&gt;在linux中，系统被挂在在&lt;code&gt;/sys&lt;/code&gt;文件中，&lt;code&gt;sysfs&lt;/code&gt; 文件则暴露了一些内核（kernel）参数。 因此，不需要借助任何专用的工具，就可以轻松地在运行期间配置系统内核。&lt;strong&gt;注意 Windows 和 macOS 没有这个文件&lt;/strong&gt;， &lt;strong&gt;wsl也不行（）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们可以对电脑屏幕亮度进行更改。
首先我们来到&lt;code&gt;/sys/class/backlight&lt;/code&gt;中，以我的电脑为例，其中有&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yoo_koishi@YOOkoishi /s/c/b/intel_backlight&amp;gt; ls
actual_brightness  brightness  max_brightness  scale       type
bl_power           device@     power/          subsystem@  uevent
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;等文件，这个时候我们就可以通过修改brightness文件来更改屏幕亮度了（需要root权限），一般来说，我们可能希望使用&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;~$ sudo echo 3 &amp;gt; brightness
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;来修改文件，不过此时命令行提示我们权限不够，这是为什么？
关于 shell，有件事我们必须要知道。|、&amp;gt;、和 &amp;lt; 是通过 shell 执行的，而不是被各个程序单独执行。 echo 等程序并不知道 | 的存在，它们只知道从自己的输入输出流中进行读写。
所以，根据这点，使用刚才提到的&lt;code&gt;tee&lt;/code&gt;软件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;~$ echo 3 | sudo tee brightness
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就可以实现对屏幕亮度的更改了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;此外还有我们还可以对键盘上的灯光进行操控。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;/sys/class/leds&lt;/code&gt;目录下可以对电脑的灯光进行控制。通过相同的操作，我们可以利用大写锁定键的灯光来实现邮件提醒的操作。&lt;/p&gt;
&lt;h3&gt;Part 2 shell工具与脚本&lt;/h3&gt;
&lt;h4&gt;shell脚本&lt;/h4&gt;
&lt;p&gt;大多数 shell 都有自己的一套脚本语言，包括变量、控制流和自己的语法。shell 脚本与其他脚本语言不同之处在于，shell 脚本针对 shell 所从事的相关工作进行了优化。因此，创建命令流程（pipelines）、将结果保存到文件、从标准输入中读取输入，这些都是 shell 脚本中的原生操作，这让它比通用的脚本语言更易用。&lt;/p&gt;
&lt;p&gt;在 bash 中为变量赋值的语法是 &lt;code&gt;foo=bar&lt;/code&gt;，访问变量中存储的数值，其语法为 &lt;code&gt;$foo&lt;/code&gt;。 需要注意的是，&lt;code&gt;foo&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; &lt;code&gt;bar&lt;/code&gt; （使用空格隔开）是不能正确工作的，因为解释器会调用程序 &lt;code&gt;foo&lt;/code&gt; 并将 &lt;code&gt;=&lt;/code&gt; 和 &lt;code&gt;bar&lt;/code&gt; 作为参数。 总的来说，在 shell 脚本中使用空格会起到分割参数的作用，有时候可能会造成混淆。&lt;/p&gt;
&lt;p&gt;Bash 中的字符串通过 &lt;code&gt;&amp;#39;&lt;/code&gt; 和 &lt;code&gt;&amp;quot;&lt;/code&gt; 分隔符来定义，但是它们的含义并不相同。以 &lt;code&gt;&amp;#39;&lt;/code&gt; 定义的字符串为原义字符串，其中的变量不会被转义，而 &lt;code&gt;&amp;quot;&lt;/code&gt; 定义的字符串会将变量值进行替换。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;foo=bar
echo &amp;quot;$foo&amp;quot;
# 打印 bar
echo &amp;#39;$foo&amp;#39;
# 打印 $foo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;bash&lt;/code&gt;支持&lt;code&gt;if&lt;/code&gt;,&lt;code&gt;case&lt;/code&gt;,&lt;code&gt;while&lt;/code&gt;,&lt;code&gt;for&lt;/code&gt;这些控制流关键字。 &lt;code&gt;bash&lt;/code&gt; 也支持函数，它可以接受参数并基于参数进行操作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特殊变量&lt;/strong&gt;
bash中有一些特殊的变量，具有特定的含义，下面是一些常用的特殊变量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$0&lt;/code&gt; - 脚本名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$1&lt;/code&gt;到 &lt;code&gt;$9&lt;/code&gt; - 脚本的参数。 $1 是第一个参数，依此类推。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$@&lt;/code&gt; - 输入的参数的具体内容（将输入的参数作为一个多个对象，即是所有参数的一个列表）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$*&lt;/code&gt; - 输入的参数的具体内容（将输入的参数作为一个单词）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$#&lt;/code&gt; - 参数个数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$?&lt;/code&gt; - 前一个命令的返回值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$$&lt;/code&gt; - 当前脚本的进程识别码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!!&lt;/code&gt; - 完整的上一条命令，包括参数。常见应用：当你因为权限不足执行命令失败时，可以使用 sudo !! 再尝试一次。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$_&lt;/code&gt; - 上一条命令的最后一个参数。如果你正在使用的是交互式 shell，你可以通过按下 Esc 之后键入 . 来获取这个值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/bin/bash

echo &amp;quot;脚本的名字是：$0&amp;quot;
echo &amp;quot;输入的第一个参数：$1&amp;quot;
echo &amp;quot;输入的第二个参数：$2&amp;quot;
echo &amp;quot;输入的参数个数：$#&amp;quot;
echo &amp;quot;所有参数（使用\$@）：$@&amp;quot;
echo &amp;quot;所有参数（使用\$*）：$*&amp;quot;
echo &amp;quot;上一个命令的返回值：$?&amp;quot;
echo &amp;quot;当前 Shell 环境的进程ID号：$$&amp;quot;

n=1
echo &amp;quot;使用\$@的参数列表为：&amp;quot;
for temstr in &amp;quot;$@&amp;quot;
do
echo &amp;quot;第$n个参数是：$temstr&amp;quot;
let n+=1
done

n=1
echo &amp;quot;使用\$*的参数列表为：&amp;quot;
for temstr in &amp;quot;$*&amp;quot;
do
echo &amp;quot;第$n个参数是：$temstr&amp;quot;
let n+=1
done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;假设脚本名为 &lt;code&gt;test.sh&lt;/code&gt;，执行命令 &lt;code&gt;./test.sh 1 2 3&lt;/code&gt;，输出结果如下：
脚本的名字是：&lt;code&gt;./test.sh&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;输入的第一个参数：1
输入的第二个参数：2
输入的参数个数：4
所有参数（使用$@）：1 2 3 4
所有参数（使用$*）：1 2 3 4
上一个命令的返回值：0
当前 Shell 环境的进程ID号：12345
使用$@的参数列表为：
第1个参数是：1
第2个参数是：2
第3个参数是：3
第4个参数是：4
使用$*的参数列表为：
第1个参数是：1 2 3 4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;返回值妙用&lt;/strong&gt;
命令通常使用 &lt;code&gt;STDOUT&lt;/code&gt; 来返回输出值，使用 &lt;code&gt;STDERR&lt;/code&gt;来返回错误及错误码，便于脚本以更加友好的方式报告错误。 返回码或退出状态是脚本/命令之间交流执行状态的方式。返回值 0 表示正常执行，其他所有非 0 的返回值都表示有错误发生。&lt;/p&gt;
&lt;p&gt;退出码可以搭配 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;（与操作符）和&lt;code&gt;||&lt;/code&gt;（或操作符）使用，用来进行条件判断，决定是否执行其他程序。它们都属于短路 运算符（short-circuiting） 同一行的多个命令可以用&lt;code&gt;;&lt;/code&gt; 分隔。程序&lt;code&gt;true&lt;/code&gt;的返回码永远是 0，&lt;code&gt;false&lt;/code&gt;的返回码永远是 1。&lt;/p&gt;
&lt;p&gt;所以，我们可以写出类似&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;false || echo &amp;quot;Oops, fail&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;来进行一些&lt;strong&gt;error handling&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令替换（command substitution）&lt;/strong&gt;
可以通过&lt;code&gt;$( CMD )&lt;/code&gt;这样的方式来执行&lt;code&gt;CMD&lt;/code&gt;命令，例如，如果执行 &lt;code&gt;for file in $(ls)&lt;/code&gt; ，&lt;code&gt;shell&lt;/code&gt; 首先将调用 &lt;code&gt;ls&lt;/code&gt; ，然后遍历得到的这些返回值。还有一个冷门的类似特性是 &lt;strong&gt;进程替换（process substitution）&lt;/strong&gt;， &lt;code&gt;&amp;lt;( CMD )&lt;/code&gt;会执行 &lt;code&gt;CMD&lt;/code&gt; 并将结果输出到一个临时文件中，并将 &lt;code&gt;&amp;lt;( CMD )&lt;/code&gt; 替换成临时文件名。这在我们希望返回值通过文件而不是 &lt;code&gt;STDIN&lt;/code&gt; 传递时很有用。例如， &lt;code&gt;diff &amp;lt;(ls foo) &amp;lt;(ls bar)&lt;/code&gt; 会显示文件夹 &lt;code&gt;foo&lt;/code&gt; 和 &lt;code&gt;bar&lt;/code&gt; 中文件的区别。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;统配（globbing）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通配符 - 当你想要利用通配符进行匹配时，你可以分别使用 &lt;code&gt;?&lt;/code&gt; 和 &lt;code&gt;*&lt;/code&gt; 来匹配一个或任意个字符。例如，对于文件 &lt;code&gt;foo&lt;/code&gt;, &lt;code&gt;foo1&lt;/code&gt;, &lt;code&gt;foo2&lt;/code&gt;, &lt;code&gt;foo10&lt;/code&gt; 和 &lt;code&gt;bar&lt;/code&gt;, &lt;code&gt;rm foo?&lt;/code&gt; 这条命令会删除 &lt;code&gt;foo1&lt;/code&gt; 和 &lt;code&gt;foo2&lt;/code&gt; ，而 &lt;code&gt;rm foo*&lt;/code&gt; 则会删除除了 &lt;code&gt;bar&lt;/code&gt; 之外的所有文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;花括号 &lt;code&gt;{}&lt;/code&gt; - 当你有一系列的指令，其中包含一段公共子串时，可以用花括号来自动展开这些命令。这在批量移动或转换文件时非常方便。如&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;convert image.{png,jpg}
# 会展开为
convert image.png image.jpg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编写 bash 脚本有时候会很别扭和反直觉。例如 &lt;a href=&quot;https://github.com/koalaman/shellcheck&quot;&gt;shellcheck&lt;/a&gt; 这样的工具可以帮助你定位 sh/bash 脚本中的错误。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;shebang&lt;/code&gt; (&lt;code&gt;#!&lt;/code&gt;)行中使用 &lt;code&gt;env&lt;/code&gt; 命令是一种好的实践，它会利用环境变量中的程序来解析该脚本，这样就提高了您的脚本的可移植性。&lt;code&gt;env&lt;/code&gt; 会利用我们第一节讲座中介绍过的 &lt;code&gt;PATH&lt;/code&gt; 环境变量来进行定位。 例如，使用了 &lt;code&gt;env&lt;/code&gt;的 &lt;code&gt;shebang&lt;/code&gt;看上去是这样的 &lt;code&gt;#!/usr/bin/env python&lt;/code&gt;。&lt;/p&gt;
&lt;h5&gt;一些工具&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;觉得&lt;code&gt;man&lt;/code&gt;太显示内容长了？不妨试试&lt;a href=&quot;https://tldr.sh/&quot;&gt;TLDR pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;fd&lt;/code&gt;&lt;/strong&gt;，find的替代品，更友好一些。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;fzf&lt;/code&gt;&lt;/strong&gt; 模糊查找shell的历史记录。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;rg&lt;/code&gt;&lt;/strong&gt;,&lt;strong&gt;&lt;code&gt;ack&lt;/code&gt;&lt;/strong&gt;,&lt;strong&gt;&lt;code&gt;ag&lt;/code&gt;&lt;/strong&gt;，&lt;code&gt;grep&lt;/code&gt;的替代品，更符合人的直觉。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;tree&lt;/code&gt;&lt;/strong&gt;,&lt;strong&gt;&lt;code&gt;broot&lt;/code&gt;&lt;/strong&gt;,等软件可以很好的展示文件结构。&lt;/li&gt;
&lt;li&gt;更好的文件管理器：&lt;strong&gt;&lt;code&gt;nnn&lt;/code&gt;&lt;/strong&gt;,&lt;strong&gt;&lt;code&gt;ranger&lt;/code&gt;&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;xrags&lt;/code&gt;&lt;/strong&gt; 它可以使用标准输入中的内容作为参数。 例如 &lt;code&gt;ls | xargs rm&lt;/code&gt;会删除当前目录中的所有文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;一些终端推荐&lt;/h5&gt;
&lt;p&gt;个人目前使用较多的终端为&lt;code&gt;tmux&lt;/code&gt;和&lt;code&gt;fish&lt;/code&gt;，另外也推荐&lt;code&gt;zsh&lt;/code&gt;等其他终端。&lt;/p&gt;
&lt;h3&gt;Part 3 Vim&lt;/h3&gt;
&lt;p&gt;vim作为一个老牌的代码编辑器，功能十分强大，在程序设计基础实验这门课里，我们或多或少接触了vim。当按下&lt;code&gt;:wq&lt;/code&gt;的时候，vim神秘的面孔，逐渐显现。&lt;/p&gt;
&lt;h4&gt;基本操作模式&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;正常模式&lt;/strong&gt;：用于导航和执行命令。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;插入模式&lt;/strong&gt;：插入文本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可视模式&lt;/strong&gt;：选择文本块。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;命令模式&lt;/strong&gt;：执行特定命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;切换模式：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按 &lt;code&gt;i&lt;/code&gt; 进入插入模式。&lt;/li&gt;
&lt;li&gt;按 &lt;code&gt;v&lt;/code&gt; 进入可视模式。&lt;/li&gt;
&lt;li&gt;按 &lt;code&gt;:&lt;/code&gt; 进入命令模式。&lt;/li&gt;
&lt;li&gt;按 &lt;code&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt; 返回正常模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;提示：由于频繁使用 &lt;code&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt;，可以考虑将其映射到更方便的键位。&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;基本操作&lt;/h4&gt;
&lt;h5&gt;插入文本&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;在正常模式下，按 &lt;code&gt;i&lt;/code&gt; 进入插入模式。&lt;/li&gt;
&lt;li&gt;输入文本。&lt;/li&gt;
&lt;li&gt;按 &lt;code&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt; 返回正常模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;缓冲区、标签页和窗口&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;缓冲区&lt;/strong&gt;：Vim 中打开的文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;标签页&lt;/strong&gt;：可以包含多个窗口。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;窗口&lt;/strong&gt;：显示缓冲区的视图，一个缓冲区可以在多个窗口中打开。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;命令行模式&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:q&lt;/code&gt;：退出。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:w&lt;/code&gt;：保存。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:wq&lt;/code&gt;：保存并退出。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:e {文件名}&lt;/code&gt;：打开文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:ls&lt;/code&gt;：列出缓冲区。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:help {命令}&lt;/code&gt;：查看&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Part 4 数据整理&lt;/h3&gt;
&lt;h3&gt;Part 5 命令行环境&lt;/h3&gt;
</content:encoded><dc:creator>YOO_koishi&apos;s blog</dc:creator><pubDate>Sat, 08 Feb 2025 16:00:00 GMT</pubDate></item><item><title>一些有用的CS相关网站</title><link>https://frosti.saroprock.com/blog/good-webside/</link><guid isPermaLink="true">https://frosti.saroprock.com/blog/good-webside/</guid><description>good website record</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://frosti.saroprock.com/blog/good-webside/&quot;&gt;https://frosti.saroprock.com/blog/good-webside/&lt;/a&gt;&lt;/blockquote&gt; &lt;h3&gt;CSDIY&lt;/h3&gt;
&lt;p&gt;首先要推荐的就是 &lt;a href=&quot;https://csdiy.wiki/&quot;&gt;csdiy&lt;/a&gt; 这个网站啦,第一次听说这个网站是在我们小班主任给我们上的开学第一课上.里面涵盖了成为一个厉害的程序员需要的一切,值得仔细的看一看,下述的很多网站也是出自这里( ).&lt;/p&gt;
&lt;h3&gt;图床&lt;/h3&gt;
&lt;p&gt;当你急需一个图床软件的时候,&lt;a href=&quot;https://catbox.moe/&quot;&gt;CATBOX&lt;/a&gt; 就显得格外有用啦,免费的200MB空间可以在自行搭建图床之前应急.
顺带一提,你可以使用 &lt;a href=&quot;https://litterbox.catbox.moe/&quot;&gt;litter box&lt;/a&gt; 生成一个临时的连接,可以分享你的图片或者pdf文件(1GB以内),非常的方便.&lt;/p&gt;
&lt;h3&gt;打字网站&lt;/h3&gt;
&lt;p&gt;推荐练习英文的 &lt;a href=&quot;https://www.typingtom.com/&quot;&gt;typing tom&lt;/a&gt; 和专注于国语的 &lt;a href=&quot;https://www.dazidazi.com&quot;&gt;dazidazi&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;有趣的github项目&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://hellogithub.com&quot;&gt;hellogithub&lt;/a&gt; 这个网站上包含了近期最新最热的github开源项目,有很多有趣的项目可以练练手.&lt;/p&gt;
&lt;h3&gt;成为积佬&lt;/h3&gt;
&lt;p&gt;被积分橄榄的大一学生要是早点知道这个网站就好了,,,&lt;a href=&quot;https://mathdf.com/int/cn/&quot;&gt;积分计算器&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;成为命令行高手&lt;/h3&gt;
&lt;p&gt;学习命令行操作是成为程序员的基本技能,&lt;a href=&quot;https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md&quot;&gt;命令行的艺术&lt;/a&gt; 作为一个经典的教程,具有很高的学习价值.
在学习的过程中可以结合&lt;a href=&quot;https://explainshell.com/&quot;&gt;explainshell.com&lt;/a&gt;来理解(或者gpt ) .&lt;/p&gt;
&lt;h3&gt;vim进阶&lt;/h3&gt;
&lt;p&gt;太好了,你已经可以使用&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-vim&quot;&gt;(ESC) :wq!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;来退出vim了,接下来就要学习vim的一些高级操作啦&lt;a href=&quot;https://github.com/wsdjeg/vim-galore-zh_cn&quot;&gt;vim&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;看点新闻?&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://tophub.today/&quot;&gt;今日热榜&lt;/a&gt; : 整合了各个国内网站的热点,可以快速了解一些近期热点事件.&lt;/p&gt;
&lt;h3&gt;在线的白板&lt;/h3&gt;
&lt;p&gt;还在使用冗杂的photoshop,或者微软自带的画图来做教学吗?&lt;a href=&quot;https://excalidraw.com/&quot;&gt;excalidraw&lt;/a&gt; 作为一款在线的白板软件,功能强大,灵活易用,是线上授课时的不错选择.&lt;/p&gt;
&lt;h3&gt;一些WiKi&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org&quot;&gt;Arch wiki&lt;/a&gt; : archlinux的官方文档和社区.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://oiwiki.com/&quot;&gt;OI Wiki&lt;/a&gt; : 编程竞赛知识整合站点.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.cppreference.com&quot;&gt;C++ Reference&lt;/a&gt; : C++的官方文档.&lt;/li&gt;
&lt;/ul&gt;
</content:encoded><dc:creator>YOO_koishi&apos;s blog</dc:creator><pubDate>Wed, 18 Dec 2024 00:00:00 GMT</pubDate></item><item><title>hexo配置踩坑</title><link>https://frosti.saroprock.com/blog/first-blog/</link><guid isPermaLink="true">https://frosti.saroprock.com/blog/first-blog/</guid><description>first blog</description><content:encoded>&lt;blockquote&gt;This rendering was automatically generated by Frosti Feed and may have formatting issues. For the best experience, please visit: &lt;a href=&quot;https://frosti.saroprock.com/blog/first-blog/&quot;&gt;https://frosti.saroprock.com/blog/first-blog/&lt;/a&gt;&lt;/blockquote&gt; &lt;p&gt;无法使用npm下载hexo-deployer-git
已经使用&lt;strong&gt;hexo g&lt;/strong&gt;和&lt;strong&gt;hexo s&lt;/strong&gt;命令完成了本地的部署,但是因为npm下不了hexo git相关组件,&lt;strong&gt;hexo d&lt;/strong&gt;无法实现.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这个时候只需要用npm下载cnpm,再用cnpm下载hexo-deployer-git就好了&lt;/p&gt;
</content:encoded><dc:creator>YOO_koishi&apos;s blog</dc:creator><pubDate>Mon, 11 Nov 2024 00:00:00 GMT</pubDate></item></channel></rss>